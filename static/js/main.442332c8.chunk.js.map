{"version":3,"sources":["cart-item/cart-item-style.ts","cart-item/cart-item.tsx","cart/cart-style.ts","cart/cart.tsx","item/item-style.ts","item/item.tsx","app-style.tsx","App.tsx","index.tsx"],"names":["Wrapper","styled","div","CartItem","item","addToCart","removeFromCart","title","className","price","amount","toFixed","Button","size","disableElevation","variant","onClick","id","src","image","alt","aside","Cart","items","cartItems","length","map","reduce","total","Item","handleAddToCart","description","StyledButton","IconButton","getProducts","a","fetch","json","App","useState","cartOpen","setCartOpen","setCartItems","useQuery","data","isLoading","error","console","log","clickedItem","prev","find","LinearProgress","Drawer","anchor","open","onClose","Badge","badgeContent","color","Grid","container","spacing","xs","sm","client","QueryClient","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.442332c8.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  border-bottom: 1px solid lightgray;\r\n  padding-bottom: 20px;\r\n\r\n  div {\r\n    flex: 1;\r\n  }\r\n\r\n  .information {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  buttons {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  Button {\r\n    background-color: darkorange;\r\n  }\r\n\r\n  img {\r\n    max-width: 80px;\r\n    object-fit: cover;\r\n    margin-left: 40px;\r\n  }\r\n`;\r\n","import Button from \"@material-ui/core/Button\";\r\n//Types\r\nimport { CartItemType } from \"../App\";\r\n//Style\r\nimport { Wrapper } from \"./cart-item-style\";\r\n\r\ntype Props = {\r\n  item: CartItemType;\r\n  addToCart: (clickedItem: CartItemType) => void;\r\n  removeFromCart: (id: number) => void;\r\n};\r\n\r\nconst CartItem: React.FC<Props> = ({ item, addToCart, removeFromCart }) => (\r\n  <Wrapper>\r\n    <div>\r\n      <h3>{item.title}</h3>\r\n      <div className=\"information\">\r\n        <p>Price: ${item.price}</p>\r\n        <p>Total: ${(item.amount * item.price).toFixed(2)}</p>\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <Button\r\n          size=\"small\"\r\n          disableElevation\r\n          variant=\"contained\"\r\n          onClick={() => removeFromCart(item.id)}\r\n        >\r\n          -\r\n        </Button>\r\n        <p>{item.amount}</p>\r\n        <Button\r\n          size=\"small\"\r\n          disableElevation\r\n          variant=\"contained\"\r\n          onClick={() => addToCart(item)}\r\n        >\r\n          +\r\n        </Button>\r\n      </div>\r\n    </div>\r\n    <img src={item.image} alt={item.title} />\r\n  </Wrapper>\r\n);\r\n\r\nexport default CartItem;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.aside`\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  padding: 20px;\r\n  width: 500px;\r\n\r\n  p {\r\n    text-align: center;\r\n  }\r\n`;\r\n","import CartItem from \"../cart-item/cart-item\";\r\n//Styles\r\nimport { Wrapper } from \"./cart-style\";\r\n//Types\r\nimport { CartItemType } from \"../App\";\r\n\r\ntype Props = {\r\n  cartItems: CartItemType[];\r\n  addToCart: (clickedItem: CartItemType) => void;\r\n  removeFromCart: (id: number) => void;\r\n};\r\n\r\nconst Cart: React.FC<Props> = ({ cartItems, addToCart, removeFromCart }) => {\r\n  const calculateTotal = (items: CartItemType[]) =>\r\n    items.reduce((total: number, item) => total + item.amount * item.price, 0);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <h2>Your Shopping Cart</h2>\r\n      {cartItems.length === 0 ? <p>No items in cart!</p> : null}\r\n      {cartItems.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          item={item}\r\n          addToCart={addToCart}\r\n          removeFromCart={removeFromCart}\r\n        />\r\n      ))}\r\n      <h2>Total: ${calculateTotal(cartItems).toFixed(2)}</h2>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  width: 90%;\r\n  border: 1px solid lightgray;\r\n  border-radius: 20px;\r\n  height: 100%;\r\n\r\n  Button {\r\n    border-radius: 12px;\r\n    background-color: darkorange;\r\n  }\r\n\r\n  img {\r\n    max-height: 250px;\r\n    object-fit: cover;\r\n    border-radius: 20px 20px 0 0;\r\n  }\r\n\r\n  div {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    padding: 1rem;\r\n    height: 100%;\r\n  }\r\n`;\r\n","import Button from \"@material-ui/core/Button\";\r\n//Types\r\nimport { CartItemType } from \"../App\";\r\n//Styles\r\nimport { Wrapper } from \"./item-style\";\r\n\r\ntype Props = {\r\n  item: CartItemType;\r\n  handleAddToCart: (clickedItem: CartItemType) => void;\r\n};\r\n\r\nconst Item: React.FC<Props> = ({ item, handleAddToCart }) => (\r\n  <Wrapper>\r\n    <img src={item.image} alt={item.title} />\r\n    <div>\r\n      <h3>{item.title}</h3>\r\n      <p>{item.description}</p>\r\n      <h3>${item.price}</h3>\r\n    </div>\r\n    <Button onClick={() => handleAddToCart(item)}>Add to cart</Button>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Item;\r\n","import IconButton from \"@material-ui/core/IconButton\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  margin: 40px;\r\n`;\r\n\r\nexport const StyledButton = styled(IconButton)`\r\n  position: fixed;\r\n  z-index: 100;\r\n  right: 20px;\r\n  top: 20px;\r\n`;\r\n","import { useState } from \"react\";\nimport { useQuery } from \"react-query\";\n//componets\nimport Cart from \"./cart/cart\";\nimport Item from \"./item/item\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport Badge from \"@material-ui/core/Badge\";\n//style\nimport { Wrapper, StyledButton } from \"./app-style\";\n\nexport type CartItemType = {\n  id: number;\n  categor: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n};\n\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await (await fetch(\"https://fakestoreapi.com/products\")).json();\n\nconst App = () => {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([] as CartItemType[]);\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    \"products\",\n    getProducts\n  );\n\n  console.log(data);\n\n  const getTotalItems = (items: CartItemType[]) =>\n    items.reduce((total: number, item) => total + item.amount, 0);\n\n  const handleAddToCart = (clickedItem: CartItemType) => {\n    setCartItems((prev) => {\n      const isItemInCart = prev.find((item) => item.id === clickedItem.id);\n\n      if (isItemInCart) {\n        return prev.map((item) =>\n          item.id === clickedItem.id\n            ? { ...item, amount: item.amount + 1 }\n            : item\n        );\n      }\n      // First item the item is added\n      return [...prev, { ...clickedItem, amount: 1 }];\n    });\n  };\n  const handleRemoveFromCart = (id: number) => {\n    setCartItems((prev) =>\n      prev.reduce((total, item) => {\n        if (item.id === id) {\n          if (item.amount === 1) return total;\n          return [...total, { ...item, amount: item.amount - 1 }];\n        } else {\n          return [...total, item];\n        }\n      }, [] as CartItemType[])\n    );\n  };\n\n  if (isLoading) return <LinearProgress />;\n  if (error) return <div>Something went wrong!...</div>;\n\n  return (\n    <Wrapper>\n      <Drawer anchor=\"right\" open={cartOpen} onClose={() => setCartOpen(false)}>\n        <Cart\n          cartItems={cartItems}\n          addToCart={handleAddToCart}\n          removeFromCart={handleRemoveFromCart}\n        />\n      </Drawer>\n      <StyledButton onClick={() => setCartOpen(true)}>\n        <Badge badgeContent={getTotalItems(cartItems)} color=\"error\">\n          <AddShoppingCartIcon />\n        </Badge>\n      </StyledButton>\n\n      <Grid container spacing={3}>\n        {data?.map((item) => (\n          <Grid item key={item.id} xs={12} sm={4}>\n            <Item item={item} handleAddToCart={handleAddToCart}></Item>\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={client}>\n    <App />\n  </QueryClientProvider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}